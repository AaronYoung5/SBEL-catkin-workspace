#! /usr/bin/python
# Copyright (c) 2015, Rethink Robotics, Inc.

# Using this CvBridge Tutorial for converting
# ROS images to OpenCV2 images
# http://wiki.ros.org/cv_bridge/Tutorials/ConvertingBetweenROSImagesAndOpenCVImagesPython

# Using this OpenCV2 tutorial for saving Images:
# http://opencv-python-tutroals.readthedocs.org/en/latest/py_tutorials/py_gui/py_image_display/py_image_display.html

# rospy for the subscriber
import rospy
# ROS Image message
from sensor_msgs.msg import Image
# ROS Image message -> OpenCV2 image converter
from cv_bridge import CvBridge, CvBridgeError
# OpenCV2 for saving an image
import cv2
import sys

# Instantiate CvBridge
bridge = CvBridge()
i = 0

run = True
if len(sys.argv) == 3:
    # Define your image topic
    image_topic = sys.argv[1]
    image_file_name = sys.argv[2]
    rospy.logdebug("\nimage topic :: %s\nimage_file_name :: %s", image_topic, image_file_name)
else:
    rospy.logfatal("Usage: rosrun ros_image_saver ros_image_saver <image_topic> <image_file_name>")
    run = False

def image_callback(msg):
    rospy.logdebug("Image received")
    try:
        # Convert your ROS Image message to OpenCV2
        cv2_img = bridge.imgmsg_to_cv2(msg, "bgr8")
    except CvBridgeError, e:
        print(e)
    else:
        global i, image_file_name
        # Save your OpenCV2 image as a jpeg
        rospy.logdebug("Saving image to :: %s_%s.jpg",image_file_name, str(i))
        cv2.imwrite(image_file_name + "_" + str(i) + '.jpg', cv2_img)
        i +=1

def main():
    rospy.init_node('bag_to_jpg', log_level=rospy.DEBUG)
    # Set up your subscriber and define its callback
    rospy.Subscriber(image_topic, Image, image_callback)
    # Spin until ctrl + c
    rospy.spin()

if __name__ == '__main__' and run:
    main()
